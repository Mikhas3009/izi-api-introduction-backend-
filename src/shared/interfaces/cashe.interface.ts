/**
 * Базовый интерфейс для всех реализаций Cache в приложении.
 *
 * Используется как абстракция для работы с различными хранилищами кэша
 * (например Redis, in-memory и т.п.) по паттерну "Мост".
 *
 * @template T - Тип данных, которые сохраняются в кэш.
 */
export interface CacheInterface<T> {
    /**
     * Сохраняет данные в кэш по заданному ключу.
     *
     * @param key - Уникальный ключ для хранения данных.
     * @param value - Данные для сохранения.
     * @param ttl - Время жизни записи в секундах (опционально).
     *
     */
    saveToCache(key: string, value: T, ttl?: number): Promise<void>;

    /**
     * Извлекает данные из кэша по ключу.
     *
     * @param key - Уникальный ключ, по которому будут получены данные.
     * @returns Объект типа T, если данные найдены, иначе null.
     */
    getFromCache(key: string): Promise<T | null>;

    /**
     * Удаляет данные из кэша по ключу.
     *
     * @param key - Уникальный ключ, данные по которому будут удалены.
     */
    deleteFromCache(key: string): Promise<void>;
}
